@use '../core/breakpoints';
@use '../core/size';

$_positions: (
    'static': 'static',
    'relative': 'relative',
    'absolute': 'absolute',
    'fixed': 'fixed',
    'sticky': 'sticky',
);

@each $name, $value in $_positions {
    .#{$name} {
        position: #{$value};
    }
    @include breakpoints.bp('#{$name}') {
        position: #{$value};
    }
}

$_directions: (
    'top': 'top',
    'right': 'right',
    'bottom': 'bottom',
    'left': 'left',
    'inset': 'inset',
);

@each $name, $dir in $_directions {
    @each $size, $value in size.$size {
        .#{$name}-#{$size} {
            #{$dir}: #{$value};
        }
        @include breakpoints.bp('#{$name}-#{$size}') {
            #{$dir}: #{$value};
        }
    }
}

$_inset-directions: (
    'start': start,
    'end': end,
);

@each $name, $dir in $_inset-directions {
    @each $size, $value in size.$size {
        .#{$name}-#{$size} {
            inset-inline-#{$dir}: #{$value};
        }
        @include breakpoints.bp('#{$name}-#{$size}') {
            inset-inline-#{$dir}: #{$value};
        }
    }
}

@each $size, $value in size.$size {
    .inset-x-#{$size} {
        left: #{$value};
        right: #{$value};
    }
    @include breakpoints.bp('inset-x-#{$size}') {
        left: #{$value};
        right: #{$value};
    }

    .inset-y-#{$size} {
        top: #{$value};
        bottom: #{$value};
    }
    @include breakpoints.bp('inset-y-#{$size}') {
        top: #{$value};
        bottom: #{$value};
    }
}
